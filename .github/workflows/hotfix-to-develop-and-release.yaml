name: Hotfix to Develop and Release

on:
  pull_request:
    branches:
      - main
    types: [closed]

jobs:
  
  create_prs:
    permissions:
      contents: write
      pull-requests: write
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true && startsWith(github.head_ref, 'hotfix/')
    steps:
      - name: Debug head_ref
        run: echo "github.head_ref=${{ github.head_ref }}"

      # リポジトリのチェックアウト
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # 環境変数にHotfixブランチ名とバージョンを保存
      - name: Extract Hotfix Branch Name and Version
        run: |
          HOTFIX_BRANCH=${{ github.head_ref }}
          HOTFIX_VERSION=${HOTFIX_BRANCH#hotfix/v}
          echo "HOTFIX_BRANCH=${HOTFIX_BRANCH}" >> $GITHUB_ENV
          echo "HOTFIX_VERSION=${HOTFIX_VERSION}" >> $GITHUB_ENV

      # DevelopブランチへのPRを作成
      - name: Create PR to Develop
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh pr create \
            --base develop \
            --head ${{ env.HOTFIX_BRANCH }} \
            --title "Hotfix: Merge ${{ env.HOTFIX_BRANCH }} into Develop" \
            --body "This is an automated PR to merge hotfix changes into the develop branch."

      # 他のHotfixブランチへのPRを作成
      - name: Create PR to Next Hotfix Branch
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          HOTFIX_VERSION: ${{ env.HOTFIX_VERSION }}
          HOTFIX_BRANCH: ${{ env.HOTFIX_BRANCH }}
        run: |
          # すべてのHotfixブランチを取得
          HOTFIX_BRANCHES=$(git branch -r | grep -E 'origin/hotfix/v[0-9]+\.[0-9]+\.[0-9]+' | sed 's/origin\///')
          echo "Hotfix branches found: $HOTFIX_BRANCHES"

          # 次のHotfixブランチを探す
          NEXT_HOTFIX_BRANCH=""
          for BRANCH in $HOTFIX_BRANCHES; do
            BRANCH_VERSION=${BRANCH#hotfix/v}
            if [[ $(echo -e "$HOTFIX_VERSION\n$BRANCH_VERSION" | sort -V | tail -n 1) == "$BRANCH_VERSION" ]] && [[ "$HOTFIX_VERSION" != "$BRANCH_VERSION" ]]; then
              NEXT_HOTFIX_BRANCH=$BRANCH
              break
            fi
          done

          if [[ -n "$NEXT_HOTFIX_BRANCH" ]]; then
            echo "Creating PR for next Hotfix branch: $NEXT_HOTFIX_BRANCH"
            gh pr create \
              --base $NEXT_HOTFIX_BRANCH \
              --head $HOTFIX_BRANCH \
              --title "Hotfix: Merge $HOTFIX_BRANCH into $NEXT_HOTFIX_BRANCH" \
              --body "This is an automated PR to merge hotfix changes into the $NEXT_HOTFIX_BRANCH branch."
          else
            echo "No next Hotfix branch found. Skipping."
          fi

      # リリースブランチへのPRを作成
      - name: Create PRs to Release Branches
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          HOTFIX_VERSION: ${{ env.HOTFIX_VERSION }}
          HOTFIX_BRANCH: ${{ env.HOTFIX_BRANCH }}
        run: |
          # すべてのリリースブランチを取得
          RELEASE_BRANCHES=$(git branch -r | grep -E 'origin/release/v[0-9]+\.[0-9]+\.[0-9]+' | sed 's/origin\///')
          echo "Release branches found: $RELEASE_BRANCHES"

          # 各リリースブランチにPRを作成
          for RELEASE_BRANCH in $RELEASE_BRANCHES; do
            RELEASE_VERSION=${RELEASE_BRANCH#release/v}

            # バージョン比較
            if [[ $(echo -e "$HOTFIX_VERSION\n$RELEASE_VERSION" | sort -V | tail -n 1) == "$RELEASE_VERSION" ]] && [[ "$HOTFIX_VERSION" != "$RELEASE_VERSION" ]]; then
              echo "Creating PR for $RELEASE_BRANCH"
              gh pr create \
                --base $RELEASE_BRANCH \
                --head $HOTFIX_BRANCH \
                --title "Hotfix: Merge $HOTFIX_BRANCH into $RELEASE_BRANCH" \
                --body "This is an automated PR to merge hotfix changes into the $RELEASE_BRANCH branch."
            fi
          done